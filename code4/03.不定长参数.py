# 不定长的参数
# 定义一个函数,可以求任意个数字的和
def sum(*a):
    result = 0
    for n in a :
        result += n
    print(result)
sum(10,23,1,5,32)
# 在定义函数时，可以在形参前边加上一个*，这样这个形参将会获取到所有的实参
# 它将会见所有的实参保存到一个元组中
# a,b,*c = (1,2,3,4,5)

# *a会接受所有的参数实参，并且会将这些实参统一保存到一个元祖中(装包)
def fn(*a):
    print('a =',a,type(a))
# fn(1,2,3,4,5)
# 带*的形参只能有一个，可以和其他参数配合使用
def fn2(a,b,*c):
    print('a =',a)
    print('b =',b)
    print('c =',c)
# fn2(1,2,3,4,5,5)
# 第一个参数给a，第二个参数给b，剩下参数给c
# 可变参数不是必须写在最后，但是带*参数后的所有参数，必须以关键字参数的形式传递
def fn3(a,*b,c):
    print('a =',a)
    print('b =',b)
    print('c =',c)
fn3(1,2,4,5,6,c=3)
# 如果开头以*开始，则所有的参数必须以关键字参数传递
# *形参只能接收位置参数,而不能接受关键字参数
def fn4(*a):
    print('a =',a)

# **形参可以接受其他的关键字参数,它会将这些参数统一保存到一个字典中
# 字典的key是参数名,字典的value是参数的值
# **形参只能有一个，必须写在所有参数的最后
def fn5(**a):
    print('a =',a)
fn5(a=1,b=2,c=3)